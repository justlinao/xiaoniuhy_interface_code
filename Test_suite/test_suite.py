import unittest
import sys
import os
curPath = os.path.abspath(os.path.dirname(__file__))
rootPath = os.path.split(curPath)[0]
sys.path.append(rootPath)

from Public.log import get_log
import smtplib
from email.mime.text import MIMEText
from email.header import Header
from HTMLTestRunner import HTMLTestRunner
from email.mime.multipart import MIMEMultipart
from email.mime.application import MIMEApplication
from email.utils import parseaddr, formataddr

# print(sys.path)


def _format_addr(s):
    name, addr = parseaddr(s)
    return formataddr((Header(name, 'utf-8').encode(), addr))


def send_email(file_new):
    msg = MIMEMultipart()

    # 发送邮箱服务器
    smtpsever = 'smtp.qq.com'
    # 发送邮箱用户 登录使用
    user = '913896561@qq.com '
    password = 'inmwizhzuzztbdcf'
    # 发送用户
    sender = '913896561@qq.com'
    # 接收用户
    receiver = '205585244@qq.com'
    # 发送主题
    subject = 'API_Test_Report'

    # 编写HTML 类型的邮件正文
    msg['Subject'] = Header(subject, 'utf-8')
    txt = MIMEText('这是API自动化测试报告，请使用浏览器打开附件并点击详情查看测试结果\n如有问题请及时联系', 'plain', 'utf-8')
    msg.attach(txt)
    msg['From'] = _format_addr(u'李闹<%s>' % user)
    msg['to'] = _format_addr(receiver)

    # 发送附件
    sendfile = open(file_new, 'rb').read()  # 获取报告
    text_att = MIMEText(sendfile, 'html', 'uft-8')  # 添加附件
    text_att["Content-Type"] = 'application/octet-stream'  # 附件类型
    text_att.add_header('Content-Disposition', 'attachment', filename='test_result.html')
    msg.attach(text_att)

    # 直接发送邮件（smtplib模块 基本使用格式）
    smtp = smtplib.SMTP()
    smtp.connect(smtpsever)
    smtp.login(user, password)
    smtp.sendmail(sender, receiver.split(','), msg.as_string())
    get_log().info('邮件发送成功')
    smtp.quit()


def get_report(test_report):
    lists = os.listdir(test_report)  # 列出目录的下所有文件和文件夹保存到list
    lists.sort(key=lambda fn: os.path.getmtime(test_report + "/" + fn))  # 按时间排序
    file_new = os.path.join(test_report, lists[-1])  # 获取最新的文件保存到file_new
    # print(file_new)
    return file_new


if __name__ == '__main__':
    path = os.getcwd()
    case_path = os.path.dirname(path) + r'\TestCase'
    discover = unittest.defaultTestLoader.discover(case_path,
                                                   pattern="test*.py",
                                                   top_level_dir=None)   # 测试模块的顶层目录，如果没有顶层目录，默认为None
    with open(os.path.dirname(path)+r'\TestReport\HTMLTestRunner.html', 'wb+') as f:
        runner = HTMLTestRunner(stream=f,             # 进入f 这个文件里
                                title='API Test Report',   # 报告 标题
                                description='generated by HTMLTestRunner.',  # 描述
                                verbosity=2     # 报告的信息程度 一般分为0 - 6级
                                )
        runner.run(discover)
    get_report = get_report(os.path.dirname(path)+r'\TestReport')
    # send_email(get_report)
